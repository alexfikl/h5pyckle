name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '30 12 * * 0'

jobs:
  ruff:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Linting (ruff)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    -
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Main Script
      run: |
        make pip-install
        make ruff

  mypy:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Annotations (mypy)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    -
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Main Script
      run: |
        make pip-install
        make mypy

  pytest:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Tests (pytest-${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.11']
    steps:
    - uses: actions/checkout@v3
    -
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Main Script
      run: |
        make pip-install
        make PYTEST_ADDOPTS='-m "not meshmode"' test

  examples:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Examples (py-${{ matrix.python-version }})
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    -
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Main Script
      run: |
        make pip-install
        make run-examples

  pytest-meshmode:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: pytest-meshmode-${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.11']
    steps:
    - uses: actions/checkout@v3
    -
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Main Script
      run: |
        sudo apt-get update
        curl -L -O https://tiker.net/ci-support-v0
        . ./ci-support-v0

        export CONDA_ENVIRONMENT=".ci/environment-meshmode.yml"
        export REQUIREMENTS_TXT=".ci/requirements-meshmode.txt"
        build_py_project_in_conda_env

        make PYTEST_ADDOPTS='-m "meshmode"' test

# vim: set ts=2 sw=2 et:
