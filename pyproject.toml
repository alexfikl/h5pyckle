[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=42",
    "wheel",
]

[project]
name = "h5pyckle"
version = "2023.4"
description = "Extensible pickling using HDF5"
readme= "README.rst"
keywords = [
    "hdf5",
    "pickle",
    "storage",
]
license = { text = "MIT" }
maintainers = [{ name = "Alexandru Fikl", email = "alexfikl@gmail.com" }]
authors = [{ name = "Alexandru Fikl", email = "alexfikl@gmail.com" }]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Utilities",
]
dependencies = [
    "h5py",
    "numpy",
]
[project.optional-dependencies]
dev = [
    "mypy",
    "pip-tools",
    "pytest",
    "ruff",
    "types-dataclasses",
]
fancy = [
    "cloudpickle",
]
unittest = [
    "unyt",
]
docs = [
    "sphinx>=6.0",
    "sphinx-book-theme",
]
[project.urls]
Documentation = "https://h5pyckle.readthedocs.io"
Repository = "https://github.com/alexfikl/h5pyckle"

[tool.setuptools]
packages = ["h5pyckle"]

[tool.black]
line-length = 88
target-version = ["py38"]
exclude='\.eggs|\.git|\.mypy_cache|build|dist|\.pytest_cache|\.pytype'

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
testpaths = "tests"
markers = [
    "meshmode: mark a test that uses meshmode",
]

[tool.mypy]
warn_unused_ignores = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = [
    "arraycontext.*",
    "cloudpickle.*",
    "dill.*",
    "h5py.*",
    "importlib_metadata.*",
    "matplotlib.*",
    "meshmode.*",
    "numpy.*",
    "pyopencl.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "A",        # flake8-builtins
    "B",        # flake8-bugbear
    "C4",       # flake8-comprehensions
    "E",        # flake8
    "F",        # flake8
    "FBT",      # flake8-boolean-trap
    "G",        # flake8-logging-format
    "I",        # flake8-isort
    "ISC",      # flake8-implicit-str-concat
    "N",        # pep8-naming
    "PL",       # pylint
    "PT",       # flake8-pytest-style
    "Q",        # flake8-quotes
    "RUF",      # ruff
    "S",        # flake8-bandit
    "SIM",      # flake8-simplify
    "UP",       # pyupgrade
    "W",        # flake8
]
ignore = [
    "E402",     # module-import-not-at-top-of-file
    "I001",     # unsorted-imports
    "PLR0913",  # too-many-arguments
    "PLR0915",  # too-many-statements
    "PLR2004",  # magic-value-comparison
    "S101",     # assert
    "S102",     # exec-builtin
    "S301",     # suspicious-pickle-usage
    "SIM108",   # use-ternary-operator
    "UP037",    # quoted-annotation
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.check-manifest]
ignore = [
    "*.yml",
    "*.yaml",
    ".ci/*",
]

[tool.doc8]
max-line-length = 88
